{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","prev","className","type","onChange","value","target","placeholder","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","App","categories","href","ReactDOM","render","document","getElementById"],"mappings":"wMAuCeA,EApCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEfC,mBAAS,IAFM,mBAElCC,EAFkC,KAE3BC,EAF2B,KAiBzC,OACE,mCACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACEJ,EAAMK,OAAOC,OAAS,IACxBR,GAAe,SAAAS,GAAI,MAAI,CAACP,MACxBC,EAAS,MAMT,SACE,uBACEO,UAAU,QACVC,KAAK,OACLC,SAnBY,SAACP,GAAO,IAClBQ,EAAUR,EAAES,OAAZD,MACRV,EAASU,IAkBHA,MAAQX,EACRa,YAAY,wB,OCjBPC,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKT,UAAU,yCAAf,UACE,qBAAKU,IAAMD,EAAME,IAAMH,IACvB,4BAAKA,Q,uBCNEI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfL,EADe,0FAC0EM,UAC7FF,GAFmB,sBAKEG,MAAMP,GALR,cAKfQ,EALe,gBAMEA,EAASC,OANX,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAZjB,kBAgBdW,GAhBc,4CAAH,sDC4BLK,EAxBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAChBtB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAU,WACRjB,EAAQC,GACLiB,MAAK,SAAAP,GACJK,EAAS,CACPT,KAAMI,EACNG,SAAS,SAGd,CAACb,IAEGc,EDb0BI,CAAclB,GAAlCU,EAFmB,EAExBJ,KAAaO,EAFW,EAEXA,QAErB,OACE,qCACIA,GAAW,4CACXH,EAAOzB,OAAS,EAChB,qCACE,qBAAIE,UAAU,WAAd,6BAA2Ca,KAC3C,qBAAKb,UAAU,YAAf,SACIuB,EAAOF,KAAK,SAAAW,GAAK,OACjB,cAAC,EAAD,eAAmCA,GAAhBA,EAAMzB,YAM/B,oBAAGP,UAAU,aAAb,kDAA8Da,EAA9D,WEKOoB,EAvBH,WAAO,IAAD,EAEoB1C,mBAAS,CAAC,SAF9B,mBAET2C,EAFS,KAEG5C,EAFH,KAIhB,OACE,qCACE,oBAAIU,UAAU,QAAd,wBACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAaV,cAAeA,IAE5B,6BACG4C,EAAWb,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,WAIpB,wBAAQb,UAAU,SAAlB,SACE,iGAAqC,mBAAGmC,KAAK,kCAAR,0BAArC,aChBRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dee0dc9b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [input, setInput] = useState('')\n\n  const handleInput = (e) => {\n    const { value } = e.target\n    setInput(value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (input.trim().length > 2) {\n      setCategories( prev => [input])\n      setInput('')\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={ handleSubmit }>\n        <input \n          className='input' \n          type='text' \n          onChange={ handleInput }\n          value={ input }\n          placeholder='Buscar gifs...'\n        />\n      </form>\n    </>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={ url } alt={ title } />\n      <p>{ title }</p>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","export const getGifs = async ( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=vc6bsHT7kUh6vqNqxac5iHyUbHPKZFOQ&q=${encodeURI(\n    category\n  )}&limit=18`\n\n  const response = await fetch(url)\n  const { data } = await response.json()\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  \n  return gifs\n}\n","import React from 'react'\nimport GifGridItem from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nconst GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <>\n      { loading && <p>Buscando...</p> }\n      { images.length > 0 ?\n        <>\n          <h3 className='subtitle'>Resultados para { category }</h3>\n          <div className='card-grid'>\n            { images.map( image => (\n              <GifGridItem key={ image.id } { ...image } />\n            ))\n            }\n          </div>\n        </>\n      :\n        <p className='no-results'>No se encontrar√≥n resultados para { category }.</p>\n      }\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category)\n      .then(images => {\n        setState({\n          data: images,\n          loading: false\n        })\n      })\n  }, [category])\n\n  return state\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst App = () => {\n\n  const [categories, setCategories] = useState(['Hola'])\n\n  return (\n    <>\n      <h1 className=\"title\">Gif Search</h1>\n      <div className=\"container\">\n        <AddCategory setCategories={setCategories} />\n\n        <ol>\n          {categories.map((category) => (\n            <GifGrid key={category} category={category} />\n          ))}\n        </ol>\n      </div>\n      <footer className='footer'>\n        <p>üíªÔ∏è con mucha paciencia y üíôÔ∏è por <a href='https://twitter.com/raulfbgomez'>@raulfbgomez</a> </p>\n      </footer>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}